SELECT 
	information_schema.TABLE_CONSTRAINTS.TABLE_NAME,
	information_schema.KEY_COLUMN_USAGE.COLUMN_NAME,
	information_schema.TABLE_CONSTRAINTS.CONSTRAINT_NAME
FROM 
	information_schema.TABLE_CONSTRAINTS 
	LEFT JOIN information_schema.KEY_COLUMN_USAGE ON 
		information_schema.KEY_COLUMN_USAGE.TABLE_NAME = information_schema.TABLE_CONSTRAINTS.TABLE_NAME
		AND information_schema.KEY_COLUMN_USAGE.CONSTRAINT_NAME = information_schema.TABLE_CONSTRAINTS.CONSTRAINT_NAME
WHERE 
	information_schema.TABLE_CONSTRAINTS.TABLE_SCHEMA LIKE {database}
	AND ( 
		information_schema.TABLE_CONSTRAINTS.CONSTRAINT_TYPE LIKE 'primary key' 
		OR information_schema.TABLE_CONSTRAINTS.CONSTRAINT_TYPE LIKE 'unique' 
	)
	AND NOT CONCAT(information_schema.TABLE_CONSTRAINTS.TABLE_NAME, '|', information_schema.TABLE_CONSTRAINTS.CONSTRAINT_NAME) IN (
		SELECT 
			CONCAT(information_schema.TABLE_CONSTRAINTS.TABLE_NAME, '|', information_schema.TABLE_CONSTRAINTS.CONSTRAINT_NAME)
		FROM 
			information_schema.TABLE_CONSTRAINTS 
			LEFT JOIN information_schema.KEY_COLUMN_USAGE ON 
				information_schema.KEY_COLUMN_USAGE.TABLE_NAME = information_schema.TABLE_CONSTRAINTS.TABLE_NAME
				AND information_schema.KEY_COLUMN_USAGE.CONSTRAINT_NAME = information_schema.TABLE_CONSTRAINTS.CONSTRAINT_NAME
		WHERE 
			information_schema.TABLE_CONSTRAINTS.TABLE_SCHEMA LIKE {database}
			AND information_schema.TABLE_CONSTRAINTS.CONSTRAINT_TYPE LIKE 'unique' 
		GROUP BY
			CONCAT(information_schema.TABLE_CONSTRAINTS.TABLE_NAME, '|', information_schema.TABLE_CONSTRAINTS.CONSTRAINT_NAME)
		HAVING COUNT(*) > 1
	)
GROUP BY
	information_schema.TABLE_CONSTRAINTS.TABLE_NAME,
	information_schema.KEY_COLUMN_USAGE.COLUMN_NAME,
	information_schema.TABLE_CONSTRAINTS.CONSTRAINT_NAME	
ORDER BY
	information_schema.TABLE_CONSTRAINTS.TABLE_NAME,
	information_schema.KEY_COLUMN_USAGE.COLUMN_NAME,
	information_schema.TABLE_CONSTRAINTS.CONSTRAINT_NAME;